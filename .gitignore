#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

void login();
void registration();
void forgot();
void displayMenu(); // Pass the cart as a reference
void admin();
void checkout();
void addItemInCart(string item , int price);
int getIndexOfItem(string item);

vector<string> cart;
vector<int> cartItemCount;
vector<int> item_price;

int main() {
    int c;
    system("clear");
    cout << "\t\t\t_____________________________________________________________________\n\n\n";
    cout << "\t\t\t                 Welcome to Bakery & Delights' Login Page            \n\n\n";
    cout << "\t\t\t_____________________________________________________________________\n\n\n";
    cout << "\t\t\t--------------------------------------\n";
    cout << "\t\t               | Press 1 to LOGIN                     |" << endl;
    cout << "\t\t               | Press 2 to REGISTER                  |" << endl;
    cout << "\t\t               | Press 3 if you forgot your PASSWORD  |" << endl;
    cout << "\t\t               | Press 4 to EXIT                      |" << endl;
    cout << "\t\t\t--------------------------------------\n";

    cout << "\n\t\t\t  Please enter your choice: ";
    cin >> c;
    cout << endl;

    switch (c) {
        case 1:
            login();
            break;

        case 2:
            registration();
            break;

        case 3:
            forgot();
            break;

        case 4:
            cout << "\t\t\t Thank you! \n\n";
            break;

        default:
            system("clear"); // Use system("cls") for Windows
            cout << "\t\t\t Please select from the options given above \n"
                 << endl;
            main();
    }

    return 0;
}

void login() {
    int count = 0;
    string userID, password, id, pass;
    system("clear");

    cout << "\t\t\tPlease enter the Username and Password\n";

    cout << "\t\t\tUSERNAME: ";
    cin >> userID;
    cout << "\t\t\tPASSWORD: ";
    cin >> password;
    if ("belle" == userID && "123"== password) {
            admin();
            }
            

    ifstream input("records.txt");

    while (input >> id >> pass) {
        if (id == userID && pass == password) {
            count = 1;
            system("clear");
            break;  // Exit the loop once credentials are found
        }
    }
    input.close();

    if (count == 1) {
        cout << userID << "\n Your LOGIN is successful \n Thanks for logging in \n";
        displayMenu();  // Display the menu after successful login
    } else {
        cout << "\n LOGIN ERROR \n Please check your username and password\n";
        main();
    }
}


void registration()
{
    string ruserID, rpassword;
    system("clear");

    cout << "\t\t\t Enter the username: ";
    cin >> ruserID;

    cout << "\t\t\t Enter the password: ";
    cin >> rpassword;

    ofstream fi("records.txt", ios::app);
    fi << ruserID << ' ' << rpassword << endl;
    fi.close();

    system("clear");
    cout << "\n\t\t\t Registration is successful! \n";
    main();
}

void forgot()
{
    int option;
    system("clear");
    cout << "\t\t\t You forgot the password? No worries. \n";
    cout << "Press 1 to search your ID by username " << endl;
    cout << "Press 2 to go back to the main menu " << endl;
    cout << "\t\t\t Enter your choice: ";
    cin >> option;

    switch (option)
    {
    case 1:
    {
        int count = 0;
        string suserID, sId, spass;
        cout << "\n\t\t\t Enter the username which you remembered: ";
        cin >> suserID;

        ifstream f2("records.txt");
        while (f2 >> sId >> spass)
        {
            if (sId == suserID)
            {
                count = 1;
            }
        }

        f2.close();
        if (count == 1)
        {
            cout << "\n\n Your account is found! \n";
            cout << "\n\n Your password is: " << spass << endl;
            main();
        }
        else
        {
            cout << "\n\t Sorry your account is not found! \n";
            main();
        }
        break;
    }
    case 2:
        main();
        break;
    default:
        cout << "\t\t\t Wrong choice! Please try again" << endl;
        forgot();
    }
}

void displayMenu() {
    int m;

    int rog = 11600;
    int apevia = 4800;
    int inplay = 1800;
    int msi = 2600;
    
    system("clear");
    cout << "\t\t\t_____________________________________________________________________\n\n\n";
    cout << "\t\t\t                              POWER SUPPLY                                   \n\n\n";
    cout << "\t\t\t_____________________________________________________________________\n\n\n";
    cout << "\t\t\t--------------------------------------\n";
    cout << "\t\t               | [1] ASUS ROG STRIX 1000W GOLD PSU  - PHP "<<rog<<"                     |" << endl;
    cout << "\t\t               | [2] APEVIA ATX PM10000W PREMIER GOLD   - PHP "<<apevia<<"                     |" << endl;
    cout << "\t\t               | [3] INPLAY GS-SERIES 450W "<<inplay<<"                                            |" << endl;
    cout << "\t\t               | [4] MSI MAG A650WATTS   - PHP "<<msi<<"                             |" << endl;
    cout << "\t\t\t--------------------------------------\n";

    // Get user input
    cout << "\n\t\t\t  Please enter the number code of your order (0 to finish): ";
    cin >> m;
    cout << endl;

    // Process user input
   while (m != 0) {
        // Add the selected item to the cart
        switch (m) {
            case 1:
                addItemInCart("ASUS ROG STRIX 1000W GOLD PSU  " , rog);
                break;
            case 2:
                 addItemInCart("APEVIA ATX PM10000W PREMIER GOLD" , apevia);
                break;
            case 3:
                 addItemInCart("INPLAY GS-SERIES 450W" , inplay);
                break;
            case 4:
                 addItemInCart("MSI MAG A650WATTS " , msi );
                break;
            default:
                cout << "Invalid choice. Please enter a valid number." << endl;
                break;
        }

    
    checkout();
}


void admin();
{

	cout << "Welcome to Admin Access Page: Add/Edit, Delete items!";
}



void addItemInCart(string item , int price);
{
	
	bool found = false;

    // Iterate through the vector using a for loop
    for (size_t i = 0; i < cart.size(); ++i) {
        if (cart[i] == item) {
            found = true;
            break; // No need to continue searching once found
        }
    }

    if (found) {
    	int index = getIndexOfItem(item);
    	cartItemCount[index] += 1;
    	item_price[index] += price;
      
    } else {
        cart.push_back(item);
        cartItemCount.push_back(1);
        item_price.push_back(price);
    }
		
};


int getIndexOfItem(string item){



    // Iterate through the vector using a for loop
    for (size_t i = 0; i < cart.size(); ++i) {
        if (cart[i] == item) {
        	return i;
        }
    }
    
    return -1;
	
}



void checkout(){
	
	int total_bill = 0;
	 cout << "\n\nYour total bill : "<<endl;
	 
    for (size_t i = 0; i < cart.size(); ++i) {
        cout <<endl<< (i + 1) <<" "<< cart[i]  <<"\t\t" <<cartItemCount[i]<< " piece/s     " <<item_price[i]<<endl;
        total_bill += item_price[i];
    }
    
    cout<<"\n -------------------------------------------------------------------\n";
    cout<<"\n Your total bill will be:                                     PHP "<<total_bill<<endl;
}



